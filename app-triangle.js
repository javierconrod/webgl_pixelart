//gl context initialize
const canvas = document.getElementById('gl-canvas');
const gl = canvas.getContext('webgl2');

//Shader para posiciones
const vertexShader = `#version 300 es
precision mediump float;

in vec2 position;
in vec3 iColor;
out vec3 oColor;
uniform float iTime;
uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 projectionMatrix;

void main()
{
  gl_Position = projectionMatrix * viewMatrix * (modelMatrix * vec4(position, 0, 1));
  oColor = iColor;
}
`;

//shader para color
const fragmentShader = `#version 300 es
precision mediump float;

out vec4 fragColor;
in vec3 oColor;

void main()
{
  fragColor = vec4(oColor, 1);
}
`;

//Compiling shaders
const vs = gl.createShader(gl.VERTEX_SHADER);
const fs = gl.createShader(gl.FRAGMENT_SHADER);

gl.shaderSource(vs, vertexShader);
gl.shaderSource(fs, fragmentShader);

gl.compileShader(vs);
gl.compileShader(fs);

if(!gl.getShaderParameter(vs, gl.COMPILE_STATUS)){
  console.error(gl.getShaderInfoLog(vs));
}

if(!gl.getShaderParameter(fs, gl.COMPILE_STATUS)){
  console.error(gl.getShaderInfoLog(fs));
}

const program = gl.createProgram();
gl.attachShader(program, vs);
gl.attachShader(program, fs);
gl.linkProgram(program);

if(!gl.getProgramParameter(program, gl.LINK_STATUS)){
  console.error(gl.getProgramInfoLog(program));
}

gl.useProgram(program);

//Drawing basic triangle
const triangleCoords = [
  //primero1
  0, .5,
  0, 0,
  .5, 0,
  .5, 0,
  .5, .5,
  0, .5,

  0, 1,
  0, 0.5,
  0.5, 0.5,
  0.5, 0.5,
  0.5, 1,
  0, 1,

  
  .5, 1,
  .5, 1.5,
  0, 1.5,
  0, 1.5,
  0, 1,
  .5, 1,

  0, 2,
  0, 1.5,
  .5, 1.5,
  .5, 1.5,
  .5, 2,
  0, 2,

  0, 2.5,
  0, 2,
  0.5, 2,
  0.5, 2,
  0.5, 2.5,
  0, 2.5,

  0, 3,
  0, 2.5,
  0.5, 2.5,
  0.5, 2.5,
  0.5, 3,
  0, 3,

  0, 3.5,
  0, 3,
  0.5, 3,
  0.5, 3,
  0.5, 3.5,
  0, 3.5,

  0, 4,
  0, 3.5,
  0.5, 3.5,
  0.5, 3.5,
  0.5, 4,
  0, 4,

  0, 4.5,
  0, 4,
  0.5, 4,
  0.5, 4,
  0.5, 4.5,
  0, 4.5,

  0, 5,
  0, 4.5,
  0.5, 4.5,
  0.5, 4.5,
  0.5, 5,
  0, 5,
//segundo1
  0.5, .5,
  0.5, 0,
  1, 0,
  1, 0,
  1, .5,
  0.5, .5,

  0.5, 1,
  0.5, 0.5,
  1, 0.5,
  1, 0.5,
  1, 1,
  0.5, 1,
  
  1, 1,
  1, 1.5,
  0.5, 1.5,
  0.5, 1.5,
  0.5, 1,
  1, 1,

  0.5, 2,
  0.5, 1.5,
  1, 1.5,
  1, 1.5,
  1, 2,
  0.5, 2,

  0.5, 2.5,
  0.5, 2,
  1, 2,
  1, 2,
  1, 2.5,
  0.5, 2.5,

  0.5, 3,
  0.5, 2.5,
  1, 2.5,
  1, 2.5,
  1, 3,
  0.5, 3,

  0.5, 3.5,
  0.5, 3,
  1, 3,
  1, 3,
  1, 3.5,
  0.5, 3.5,

  0.5, 4,
  0.5, 3.5,
  1, 3.5,
  1, 3.5,
  1, 4,
  0.5, 4,

  0.5, 4.5,
  0.5, 4,
  1, 4,
  1, 4,
  1, 4.5,
  0.5, 4.5,
  
  //tercero1

  1, .5,
  1, 0,
  1.5, 0,
  1.5, 0,
  1.5, .5,
  1, .5,

  1, 1,
  1, 0.5,
  1.5, 0.5,
  1.5, 0.5,
  1.5, 1,
  1, 1,
  
  1.5, 1,
  1.5, 1.5,
  1, 1.5,
  1, 1.5,
  1, 1,
  1.5, 1,

  1, 2,
  1, 1.5,
  1.5, 1.5,
  1.5, 1.5,
  1.5, 2,
  1, 2,

  1, 2.5,
  1, 2,
  1.5, 2,
  1.5, 2,
  1.5, 2.5,
  1, 2.5,

  1, 3,
  1, 2.5,
  1.5, 2.5,
  1.5, 2.5,
  1.5, 3,
  1, 3,

  1, 3.5,
  1, 3,
  1.5, 3,
  1.5, 3,
  1.5, 3.5,
  1, 3.5,

  //cuarto1

  1.5, .5,
  1.5, 0,
  2, 0,
  2, 0,
  2, .5,
  1.5, .5,

  1.5, 1,
  1.5, 0.5,
  2, 0.5,
  2, 0.5,
  2, 1,
  1.5, 1,
  
  2, 1,
  2, 1.5,
  1.5, 1.5,
  1.5, 1.5,
  1.5, 1,
  2, 1,

  1.5, 2,
  1.5, 1.5,
  2, 1.5,
  2, 1.5,
  2, 2,
  1.5, 2,

  1.5, 2.5,
  1.5, 2,
  2, 2,
  2, 2,
  2, 2.5,
  1.5, 2.5,

  1.5, 3,
  1.5, 2.5,
  2, 2.5,
  2, 2.5,
  2, 3,
  1.5, 3,

  //quinto1

  2, .5,
  2, 0,
  2.5, 0,
  2.5, 0,
  2.5, .5,
  2, .5,

  2, 1,
  2, 0.5,
  2.5, 0.5,
  2.5, 0.5,
  2.5, 1,
  2, 1,
  
  2.5, 1,
  2.5, 1.5,
  2, 1.5,
  2, 1.5,
  2, 1,
  2.5, 1,

  2, 2,
  2, 1.5,
  2.5, 1.5,
  2.5, 1.5,
  2.5, 2,
  2, 2,

  2, 2.5,
  2, 2,
  2.5, 2,
  2.5, 2,
  2.5, 2.5,
  2, 2.5,

  //sexto1

  2.5, .5,
  2.5, 0,
  3, 0,
  3, 0,
  3, .5,
  2.5, .5,

  2.5, 1,
  2.5, 0.5,
  3, 0.5,
  3, 0.5,
  3, 1,
  2.5, 1,
  
  3, 1,
  3, 1.5,
  2.5, 1.5,
  2.5, 1.5,
  2.5, 1,
  3, 1,

  2.5, 2,
  2.5, 1.5,
  3, 1.5,
  3, 1.5,
  3, 2,
  2.5, 2,
  
  //septimo1

  3, .5,
  3, 0,
  3.5, 0,
  3.5, 0,
  3.5, .5,
  3, .5,

  3, 1,
  3, 0.5,
  3.5, 0.5,
  3.5, 0.5,
  3.5, 1,
  3, 1,
  
  3.5, 1,
  3.5, 1.5,
  3, 1.5,
  3, 1.5,
  3, 1,
  3.5, 1,

  3, 2,
  3, 1.5,
  3.5, 1.5,
  3.5, 1.5,
  3.5, 2,
  3, 2,

  3, 2.5,
  3, 2,
  3.5, 2,
  3.5, 2,
  3.5, 2.5,
  3, 2.5,

  //octavo1

  3.5, .5,
  3.5, 0,
  4, 0,
  4, 0,
  4, .5,
  3.5, .5,

  3.5, 1,
  3.5, 0.5,
  4, 0.5,
  4, 0.5,
  4, 1,
  3.5, 1,
  
  4, 1,
  4, 1.5,
  3.5, 1.5,
  3.5, 1.5,
  3.5, 1,
  4, 1,

  3.5, 2,
  3.5, 1.5,
  4, 1.5,
  4, 1.5,
  4, 2,
  3.5, 2,

  3.5, 2.5,
  3.5, 2,
  4, 2,
  4, 2,
  4, 2.5,
  3.5, 2.5,

  3.5, 3,
  3.5, 2.5,
  4, 2.5,
  4, 2.5,
  4, 3,
  3.5, 3,

  //noveno1

  4, .5,
  4, 0,
  4.5, 0,
  4.5, 0,
  4.5, .5,
  4, .5,

  4, 1,
  4, 0.5,
  4.5, 0.5,
  4.5, 0.5,
  4.5, 1,
  4, 1,
  
  4.5, 1,
  4.5, 1.5,
  4, 1.5,
  4, 1.5,
  4, 1,
  4.5, 1,

  4, 2,
  4, 1.5,
  4.5, 1.5,
  4.5, 1.5,
  4.5, 2,
  4, 2,

  4, 2.5,
  4, 2,
  4.5, 2,
  4.5, 2,
  4.5, 2.5,
  4, 2.5,

  4, 3,
  4, 2.5,
  4.5, 2.5,
  4.5, 2.5,
  4.5, 3,
  4, 3,

  4, 3.5,
  4, 3,
  4.5, 3,
  4.5, 3,
  4.5, 3.5,
  4, 3.5,

  //decimo1

  4.5, .5,
  4.5, 0,
  5, 0,
  5, 0,
  5, .5,
  4.5, .5,

  4.5, 1,
  4.5, 0.5,
  5, 0.5,
  5, 0.5,
  5, 1,
  4.5, 1,
  
  5, 1,
  5, 1.5,
  4.5, 1.5,
  4.5, 1.5,
  4.5, 1,
  5, 1,

  4.5, 2,
  4.5, 1.5,
  5, 1.5,
  5, 1.5,
  5, 2,
  4.5, 2,

  4.5, 2.5,
  4.5, 2,
  5, 2,
  5, 2,
  5, 2.5,
  4.5, 2.5,

  4.5, 3,
  4.5, 2.5,
  5, 2.5,
  5, 2.5,
  5, 3,
  4.5, 3,

  4.5, 3.5,
  4.5, 3,
  5, 3,
  5, 3,
  5, 3.5,
  4.5, 3.5,

  //onceavo1

  5, 1,
  5, 0.5,
  5.5, 0.5,
  5.5, 0.5,
  5.5, 1,
  5, 1,
  
  5.5, 1,
  5.5, 1.5,
  5, 1.5,
  5, 1.5,
  5, 1,
  5.5, 1,

  5, 2,
  5, 1.5,
  5.5, 1.5,
  5.5, 1.5,
  5.5, 2,
  5, 2,

  5, 2.5,
  5, 2,
  5.5, 2,
  5.5, 2,
  5.5, 2.5,
  5, 2.5,

  5, 3,
  5, 2.5,
  5.5, 2.5,
  5.5, 2.5,
  5.5, 3,
  5, 3,
///////////////////////////////////////////////////////////////////////
  //primero2

  0, -.5,
  0, 0,
  .5, 0,
  .5, 0,
  .5, -.5,
  0, -.5,

  0, -1,
  0, -0.5,
  0.5, -0.5,
  0.5, -0.5,
  0.5, -1,
  0, -1,

  
  .5, -1,
  .5, -1.5,
  0, -1.5,
  0, -1.5,
  0, -1,
  .5, -1,

  0, -2,
  0, -1.5,
  .5, -1.5,
  .5, -1.5,
  .5, -2,
  0, -2,

  0, -2.5,
  0, -2,
  0.5, -2,
  0.5, -2,
  0.5, -2.5,
  0, -2.5,

  0, -3,
  0, -2.5,
  0.5, -2.5,
  0.5, -2.5,
  0.5, -3,
  0, -3,
  
  //segundo2

  //segundo
  0.5, -.5,
  0.5, 0,
  1, 0,
  1, 0,
  1, -.5,
  0.5, -.5,

  0.5, -1,
  0.5, -0.5,
  1, -0.5,
  1, -0.5,
  1, -1,
  0.5, -1,
  
  1, -1,
  1, -1.5,
  0.5, -1.5,
  0.5, -1.5,
  0.5, -1,
  1, -1,

  0.5, -2,
  0.5, -1.5,
  1, -1.5,
  1, -1.5,
  1, -2,
  0.5, -2,

  0.5, -2.5,
  0.5, -2,
  1, -2,
  1, -2,
  1, -2.5,
  0.5, -2.5,

  0.5, -3,
  0.5, -2.5,
  1, -2.5,
  1, -2.5,
  1, -3,
  0.5, -3,
  
  //tercero1

  1, -.5,
  1, 0,
  1.5, 0,
  1.5, 0,
  1.5, -.5,
  1, -.5,

  1, -1,
  1, -0.5,
  1.5, -0.5,
  1.5, -0.5,
  1.5, -1,
  1, -1,
  
  1.5, -1,
  1.5, -1.5,
  1, -1.5,
  1, -1.5,
  1, -1,
  1.5, -1,

  1, -2,
  1, -1.5,
  1.5, -1.5,
  1.5, -1.5,
  1.5, -2,
  1, -2,

  1, -2.5,
  1, -2,
  1.5, -2,
  1.5, -2,
  1.5, -2.5,
  1, -2.5,

  1, -3,
  1, -2.5,
  1.5, -2.5,
  1.5, -2.5,
  1.5, -3,
  1, -3,

  1, -3.5,
  1, -3,
  1.5, -3,
  1.5, -3,
  1.5, -3.5,
  1, -3.5,

  //cuarto1

  1.5, -.5,
  1.5, 0,
  2, 0,
  2, 0,
  2, -.5,
  1.5, -.5,

  1.5, -1,
  1.5, -0.5,
  2, -0.5,
  2, -0.5,
  2, -1,
  1.5, -1,
  
  2, -1,
  2, -1.5,
  1.5, -1.5,
  1.5, -1.5,
  1.5, -1,
  2, -1,

  1.5, -2,
  1.5, -1.5,
  2, -1.5,
  2, -1.5,
  2, -2,
  1.5, -2,

  1.5, -2.5,
  1.5, -2,
  2, -2,
  2, -2,
  2, -2.5,
  1.5, -2.5,

  1.5, -3,
  1.5, -2.5,
  2, -2.5,
  2, -2.5,
  2, -3,
  1.5, -3,

  1.5, -3.5,
  1.5, -3,
  2, -3,
  2, -3,
  2, -3.5,
  1.5, -3.5,

  //quinto1

  2, -.5,
  2, 0,
  2.5, 0,
  2.5, 0,
  2.5, -.5,
  2, -.5,

  2, -1,
  2, -0.5,
  2.5, -0.5,
  2.5, -0.5,
  2.5, -1,
  2, -1,
  
  2.5, -1,
  2.5, -1.5,
  2, -1.5,
  2, -1.5,
  2, -1,
  2.5, -1,

  2, -2,
  2, -1.5,
  2.5, -1.5,
  2.5, -1.5,
  2.5, -2,
  2, -2,

  2, -2.5,
  2, -2,
  2.5, -2,
  2.5, -2,
  2.5, -2.5,
  2, -2.5,

  2, -3,
  2, -2.5,
  2.5, -2.5,
  2.5, -2.5,
  2.5, -3,
  2, -3,

  //sexto1

  2.5, -.5,
  2.5, 0,
  3, 0,
  3, 0,
  3, -.5,
  2.5, -.5,

  2.5, -1,
  2.5, -0.5,
  3, -0.5,
  3, -0.5,
  3, -1,
  2.5, -1,
  
  3, -1,
  3, -1.5,
  2.5, -1.5,
  2.5, -1.5,
  2.5, -1,
  3, -1,

  2.5, -2,
  2.5, -1.5,
  3, -1.5,
  3, -1.5,
  3, -2,
  2.5, -2,

  2.5, -2.5,
  2.5, -2,
  3, -2,
  3, -2,
  3, -2.5,
  2.5, -2.5,
  
  
  //septimo1

  3, -.5,
  3, 0,
  3.5, 0,
  3.5, 0,
  3.5, -.5,
  3, -.5,

  3, -1,
  3, -0.5,
  3.5, -0.5,
  3.5, -0.5,
  3.5, -1,
  3, -1,
  
  3.5, -1,
  3.5, -1.5,
  3, -1.5,
  3, -1.5,
  3, -1,
  3.5, -1,

  3, -2,
  3, -1.5,
  3.5, -1.5,
  3.5, -1.5,
  3.5, -2,
  3, -2,

  3, -2.5,
  3, -2,
  3.5, -2,
  3.5, -2,
  3.5, -2.5,
  3, -2.5,

  //octavo1

  3.5, -.5,
  3.5, 0,
  4, 0,
  4, 0,
  4, -.5,
  3.5, -.5,

  3.5, -1,
  3.5, -0.5,
  4, -0.5,
  4, -0.5,
  4, -1,
  3.5, -1,
  
  4, -1,
  4, -1.5,
  3.5, -1.5,
  3.5, -1.5,
  3.5, -1,
  4, -1,

  3.5, -2,
  3.5, -1.5,
  4, -1.5,
  4, -1.5,
  4, -2,
  3.5, -2,

  3.5, -2.5,
  3.5, -2,
  4, -2,
  4, -2,
  4, -2.5,
  3.5, -2.5,

  //noveno1

  4, -.5,
  4, 0,
  4.5, 0,
  4.5, 0,
  4.5, -.5,
  4, -.5,

  4, -1,
  4, -0.5,
  4.5, -0.5,
  4.5, -0.5,
  4.5, -1,
  4, -1,

  //decimo1

  4.5, -.5,
  4.5, 0,
  5, 0,
  5, 0,
  5, -.5,
  4.5, -.5,
  
  ///////////////////////////////////////////////////////////////////////
  //primero3

  0, -.5,
  0, 0,
  -.5, 0,
  -.5, 0,
  -.5, -.5,
  0, -.5,

  0, -1,
  0, -0.5,
  -0.5, -0.5,
  -0.5, -0.5,
  -0.5, -1,
  0, -1,

  
  -.5, -1,
  -.5, -1.5,
  0, -1.5,
  0, -1.5,
  0, -1,
  -.5, -1,

  0, -2,
  0, -1.5,
  -.5, -1.5,
  -.5, -1.5,
  -.5, -2,
  0, -2,

  0, -2.5,
  0, -2,
  -0.5, -2,
  -0.5, -2,
  -0.5, -2.5,
  0, -2.5,

  0, -3,
  0, -2.5,
  -0.5, -2.5,
  -0.5, -2.5,
  -0.5, -3,
  0, -3,
  
  //segundo2

  //segundo
  -0.5, -.5,
  -0.5, 0,
  -1, 0,
  -1, 0,
  -1, -.5,
  -0.5, -.5,

  -0.5, -1,
  -0.5, -0.5,
  -1, -0.5,
  -1, -0.5,
  -1, -1,
  -0.5, -1,
  
  -1, -1,
  -1, -1.5,
  -0.5, -1.5,
  -0.5, -1.5,
  -0.5, -1,
  -1, -1,

  -0.5, -2,
  -0.5, -1.5,
  -1, -1.5,
  -1, -1.5,
  -1, -2,
  -0.5, -2,

  -0.5, -2.5,
  -0.5, -2,
  -1, -2,
  -1, -2,
  -1, -2.5,
  -0.5, -2.5,

  -0.5, -3,
  -0.5, -2.5,
  -1, -2.5,
  -1, -2.5,
  -1, -3,
  -0.5, -3,
  
  //tercero1

  -1, -.5,
  -1, 0,
  -1.5, 0,
  -1.5, 0,
  -1.5, -.5,
  -1, -.5,

  -1, -1,
  -1, -0.5,
  -1.5, -0.5,
  -1.5, -0.5,
  -1.5, -1,
  -1, -1,
  
  -1.5, -1,
  -1.5, -1.5,
  -1, -1.5,
  -1, -1.5,
  -1, -1,
  -1.5, -1,

  -1, -2,
  -1, -1.5,
  -1.5, -1.5,
  -1.5, -1.5,
  -1.5, -2,
  -1, -2,

  -1, -2.5,
  -1, -2,
  -1.5, -2,
  -1.5, -2,
  -1.5, -2.5,
  -1, -2.5,

  -1, -3,
  -1, -2.5,
  -1.5, -2.5,
  -1.5, -2.5,
  -1.5, -3,
  -1, -3,

  //cuarto1

  -1.5, -.5,
  -1.5, 0,
  -2, 0,
  -2, 0,
  -2, -.5,
  -1.5, -.5,

  -1.5, -1,
  -1.5, -0.5,
  -2, -0.5,
  -2, -0.5,
  -2, -1,
  -1.5, -1,
  
  -2, -1,
  -2, -1.5,
  -1.5, -1.5,
  -1.5, -1.5,
  -1.5, -1,
  -2, -1,

  -1.5, -2,
  -1.5, -1.5,
  -2, -1.5,
  -2, -1.5,
  -2, -2,
  -1.5, -2,

  -1.5, -2.5,
  -1.5, -2,
  -2, -2,
  -2, -2,
  -2, -2.5,
  -1.5, -2.5,

  //quinto1

  -2, -.5,
  -2, 0,
  -2.5, 0,
  -2.5, 0,
  -2.5, -.5,
  -2, -.5,

  -2, -1,
  -2, -0.5,
  -2.5, -0.5,
  -2.5, -0.5,
  -2.5, -1,
  -2, -1,
  
  -2.5, -1,
  -2.5, -1.5,
  -2, -1.5,
  -2, -1.5,
  -2, -1,
  -2.5, -1,

  //sexto1

  -2.5, -.5,
  -2.5, 0,
  -3, 0,
  -3, 0,
  -3, -.5,
  -2.5, -.5,

  -2.5, -1,
  -2.5, -0.5,
  -3, -0.5,
  -3, -0.5,
  -3, -1,
  -2.5, -1,
  
  
  //septimo1

  -3, -.5,
  -3, 0,
  -3.5, 0,
  -3.5, 0,
  -3.5, -.5,
  -3, -.5,

  

  

  //////////////////////////////////////////////////////////////
  //primero4
  0, .5,
  0, 0,
  -.5, 0,
  -.5, 0,
  -.5, .5,
  0, .5,

  0, 1,
  0, 0.5,
  -0.5, 0.5,
  -0.5, 0.5,
  -0.5, 1,
  0, 1,

  
  -.5, 1,
  -.5, 1.5,
  0, 1.5,
  0, 1.5,
  0, 1,
  -.5, 1,

  0, 2,
  0, 1.5,
  -.5, 1.5,
  -.5, 1.5,
  -.5, 2,
  0, 2,

  0, 2.5,
  0, 2,
  -0.5, 2,
  -0.5, 2,
  -0.5, 2.5,
  0, 2.5,

  0, 3,
  0, 2.5,
  -0.5, 2.5,
  -0.5, 2.5,
  -0.5, 3,
  0, 3,

  0, 3.5,
  0, 3,
  -0.5, 3,
  -0.5, 3,
  -0.5, 3.5,
  0, 3.5,

  0, 4,
  0, 3.5,
  -0.5, 3.5,
  -0.5, 3.5,
  -0.5, 4,
  0, 4,

  0, 4.5,
  0, 4,
  -0.5, 4,
  -0.5, 4,
  -0.5, 4.5,
  0, 4.5,

  0, 5,
  0, 4.5,
  -0.5, 4.5,
  -0.5, 4.5,
  -0.5, 5,
  0, 5,
//segundo1
  -0.5, .5,
  -0.5, 0,
  -1, 0,
  -1, 0,
  -1, .5,
  -0.5, .5,

  -0.5, 1,
  -0.5, 0.5,
  -1, 0.5,
  -1, 0.5,
  -1, 1,
  -0.5, 1,
  
  -1, 1,
  -1, 1.5,
  -0.5, 1.5,
  -0.5, 1.5,
  -0.5, 1,
  -1, 1,

  -0.5, 2,
  -0.5, 1.5,
  -1, 1.5,
  -1, 1.5,
  -1, 2,
  -0.5, 2,

  -0.5, 2.5,
  -0.5, 2,
  -1, 2,
  -1, 2,
  -1, 2.5,
  -0.5, 2.5,

  -0.5, 3,
  -0.5, 2.5,
  -1, 2.5,
  -1, 2.5,
  -1, 3,
  -0.5, 3,

  -0.5, 3.5,
  -0.5, 3,
  -1, 3,
  -1, 3,
  -1, 3.5,
  -0.5, 3.5,

  -0.5, 4,
  -0.5, 3.5,
  -1, 3.5,
  -1, 3.5,
  -1, 4,
  -0.5, 4,

  -0.5, 4.5,
  -0.5, 4,
  -1, 4,
  -1, 4,
  -1, 4.5,
  -0.5, 4.5,
  
  //tercero1

  -1, .5,
  -1, 0,
  -1.5, 0,
  -1.5, 0,
  -1.5, .5,
  -1, .5,

  -1, 1,
  -1, 0.5,
  -1.5, 0.5,
  -1.5, 0.5,
  -1.5, 1,
  -1, 1,
  
  -1.5, 1,
  -1.5, 1.5,
  -1, 1.5,
  -1, 1.5,
  -1, 1,
  -1.5, 1,

  -1, 2,
  -1, 1.5,
  -1.5, 1.5,
  -1.5, 1.5,
  -1.5, 2,
  -1, 2,

  -1, 2.5,
  -1, 2,
  -1.5, 2,
  -1.5, 2,
  -1.5, 2.5,
  -1, 2.5,

  -1, 3,
  -1, 2.5,
  -1.5, 2.5,
  -1.5, 2.5,
  -1.5, 3,
  -1, 3,

  -1, 3.5,
  -1, 3,
  -1.5, 3,
  -1.5, 3,
  -1.5, 3.5,
  -1, 3.5,

  -1, 4,
  -1, 3.5,
  -1.5, 3.5,
  -1.5, 3.5,
  -1.5, 4,
  -1, 4,

  //cuarto1

  -1.5, .5,
  -1.5, 0,
  -2, 0,
  -2, 0,
  -2, .5,
  -1.5, .5,

  -1.5, 1,
  -1.5, 0.5,
  -2, 0.5,
  -2, 0.5,
  -2, 1,
  -1.5, 1,
  
  -2, 1,
  -2, 1.5,
  -1.5, 1.5,
  -1.5, 1.5,
  -1.5, 1,
  -2, 1,

  -1.5, 2,
  -1.5, 1.5,
  -2, 1.5,
  -2, 1.5,
  -2, 2,
  -1.5, 2,

  -1.5, 2.5,
  -1.5, 2,
  -2, 2,
  -2, 2,
  -2, 2.5,
  -1.5, 2.5,

  -1.5, 3,
  -1.5, 2.5,
  -2, 2.5,
  -2, 2.5,
  -2, 3,
  -1.5, 3,

  //quinto1

  -2, .5,
  -2, 0,
  -2.5, 0,
  -2.5, 0,
  -2.5, .5,
  -2, .5,

  -2, 1,
  -2, 0.5,
  -2.5, 0.5,
  -2.5, 0.5,
  -2.5, 1,
  -2, 1,
  
  -2.5, 1,
  -2.5, 1.5,
  -2, 1.5,
  -2, 1.5,
  -2, 1,
  -2.5, 1,

  -2, 2,
  -2, 1.5,
  -2.5, 1.5,
  -2.5, 1.5,
  -2.5, 2,
  -2, 2,

  -2, 2.5,
  -2, 2,
  -2.5, 2,
  -2.5, 2,
  -2.5, 2.5,
  -2, 2.5,

  //sexto1

  -2.5, .5,
  -2.5, 0,
  -3, 0,
  -3, 0,
  -3, .5,
  -2.5, .5,

  -2.5, 1,
  -2.5, 0.5,
  -3, 0.5,
  -3, 0.5,
  -3, 1,
  -2.5, 1,
  
  -3, 1,
  -3, 1.5,
  -2.5, 1.5,
  -2.5, 1.5,
  -2.5, 1,
  -3, 1,

  -2.5, 2,
  -2.5, 1.5,
  -3, 1.5,
  -3, 1.5,
  -3, 2,
  -2.5, 2,
  
  //septimo1

  -3, .5,
  -3, 0,
  -3.5, 0,
  -3.5, 0,
  -3.5, .5,
  -3, .5,

  -3, 1,
  -3, 0.5,
  -3.5, 0.5,
  -3.5, 0.5,
  -3.5, 1,
  -3, 1,
  
  -3.5, 1,
  -3.5, 1.5,
  -3, 1.5,
  -3, 1.5,
  -3, 1,
  -3.5, 1,

  -3, 2,
  -3, 1.5,
  -3.5, 1.5,
  -3.5, 1.5,
  -3.5, 2,
  -3, 2,

  //octavo1

  -3.5, .5,
  -3.5, 0,
  -4, 0,
  -4, 0,
  -4, .5,
  -3.5, .5,

  
  -4, 1,
  -4, 1.5,
  -3.5, 1.5,
  -3.5, 1.5,
  -3.5, 1,
  -4, 1,

  


];

const vertexColorArray = [
  //primero1
  0, 0, 0, //r
  0, 0, 0, //g
  0, 0, 0, //b
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //segundo1

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //tercero1

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  
  //cuarto1

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //quinto1

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //sexto1

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //septimo1

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //octavo1

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //noveno1

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //decimo1

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //onceavo1

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //////////////////////////////////////////////////////////////

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //////////////////////

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  ////////////////////////3

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
/////////////////////////////////////4

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //////////////////////////5

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  //////////////////////6

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  /////////////7

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  /////////8

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //////////9

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  ////////////10

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //////////////////////////////////////////////////////////////////

  ///////////

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
///////////////////////////

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  ///////////////////////////

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  ///////////////////////////

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  ///////////////////////////

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  ///////////////////

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  /////////////////

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //////////////////////////////////////////////////////////////////

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //////////////////////////////

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,


  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  ///////////////////

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,
  .1, .1, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  ///////////////////////////

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,
  .9, .9, .9,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

////////////////////////

  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,
  .3, .3, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,
  .6, .6, 1,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  /////////////////////////

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //////////////////////

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,
  .8, .4, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  //////////////////////////////

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,
  0, 0, 0,

  

  //0, 1, 1,
  //0.5, 0.5, 1
];

/*const indexArray = [
  0, 1, 2,
  0, 2, 3,
];*/

//const indexArrayBuffer = gl.createBuffer();
const vertexColorBuffer = gl.createBuffer();
const postionBuffer = gl.createBuffer();

let now = Date.now();

const uniformTime = gl.getUniformLocation(program, 'iTime');
const uModelMatrix = gl.getUniformLocation(program, 'modelMatrix');
const uViewMatrix = gl.getUniformLocation(program, 'viewMatrix');
const uProjectionMatrix = gl.getUniformLocation(program, 'projectionMatrix');
const attribVertexColor = gl.getAttribLocation(program, 'iColor');
const attribPosition = gl.getAttribLocation(program,'position');

const modelMatrix = mat4.create();
const viewMatrix = mat4.create();
const projectionMatrix = mat4.create();

mat4.scale(
  viewMatrix,
  viewMatrix,
  [1, 1, 1]
);

mat4.translate(
  viewMatrix,
  viewMatrix,
  [0, 0, -10]
);

const update = ()=> {

  const deltaTime = (Date.now() - now) / 1000;
  now = Date.now();
  //console.log(deltaTime);

  /*mat4.rotate(
    modelMatrix,
    modelMatrix,
    deltaTime * 1,
    [1, 1, 0]
  );*/

  //clear screen
  gl.clearColor(.5, .5, .5, 1);
  gl.clear(gl.COLOR_BUFFER_BIT);

  /*mat4.translate(
    modelMatrix,
    modelMatrix,
    [0, 0, 0]
  );*/

  /*mat4.translate(
    viewMatrix,
    viewMatrix,
    [0, 0, -10]
  );*/

  mat4.perspective(
    projectionMatrix,
    65 * (Math.PI / 180),
    canvas.clientWidth / canvas.clientHeight,
    1,
    1000
  );

  gl.uniform1f(uniformTime, deltaTime);

  gl.uniformMatrix4fv(uModelMatrix, false, modelMatrix);
  gl.uniformMatrix4fv(uViewMatrix, false, viewMatrix);
  gl.uniformMatrix4fv(uProjectionMatrix, false, projectionMatrix);

  //color
  gl.bindBuffer(gl.ARRAY_BUFFER, vertexColorBuffer);
  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexColorArray), gl.STATIC_DRAW);
  gl.enableVertexAttribArray(attribVertexColor);
  gl.vertexAttribPointer(attribVertexColor, 3, gl.FLOAT, gl.FALSE, 0, 0);

  //vertex
  gl.bindBuffer(gl.ARRAY_BUFFER, postionBuffer);
  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(triangleCoords), gl.STATIC_DRAW);
  gl.enableVertexAttribArray(attribPosition);
  gl.vertexAttribPointer(attribPosition, 2, gl.FLOAT, gl.FALSE, 0, 0);

  //indices
  //gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexArrayBuffer);
  //gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indexArray), gl.STATIC_DRAW);

  //gl.drawElements(gl.TRIANGLES, indexArray.length, gl.UNSIGNED_SHORT, 0);
  gl.drawArrays(gl.TRIANGLES, 0, 2048);
  requestAnimationFrame(update);
}

requestAnimationFrame(update);